cis_exceptions() {
cat <<EOF
Purpose:
This document outlines the specific exceptions to the Center for Internet Security (CIS) Benchmarks for Cybersecurity as applied to CSI Linux systems. Due to the specialized requirements of cyberforensic analysis, certain benchmark recommendations, particularly concerning filesystem support, are not fully implemented to ensure the effectiveness of forensic investigations. Users must acknowledge and accept these exceptions before integrating CSI Linux systems into secured networks.

Exception Details:
The primary exception to CIS compliance for CSI Linux systems pertains to the recommendation for "Disabling Unneeded Filesystem Support" (CIS Control). CSI Linux maintains enhanced filesystem support crucial forensic analysis, including, but not limited to, reading, writing, and analyzing a wide range of filesystem formats encountered in digital forensic investigations.

Rationale for Exception:
1. Forensic Analysis Capability: Comprehensive filesystem support is essential for accessing and analyzing evidence from diverse digital sources, including those using less common or legacy filesystems.
2. Tool Compatibility: Advanced forensic tools and applications require the ability to interact with various filesystems to perform detailed evidence examination, data recovery, and analysis.
3. Investigative Integrity: The ability to access and analyze all relevant data is critical to the success and integrity of forensic investigations. Limiting filesystem support could compromise the ability to uncover crucial evidence.

Risk Mitigation Measures:
To counterbalance the potential security risks associated with this exception, the following mitigations are implemented:
• Enhanced Security Monitoring and Auditing: Continuous monitoring and auditing of system access and activities to quickly identify and respond to potential security threats.
• Strict Access Control Measures: Implementation of robust access controls to ensure that only authorized users can access forensic tools and data.
• Regular Security Updates and Patch Management: Ensuring that all systems are regularly updated with the latest security patches and updates to protect against vulnerabilities.

Compensating Controls for CSI Linux CIS Compliance Exceptions
To address the exceptions to CIS compliance related to maintaining enhanced filesystem support on CSI Linux systems, the following compensating controls are recommended to mitigate potential security risks. These controls should be integrated into the cybersecurity framework of the organization to ensure the secure operation of CSI Linux systems within secured networks.
• Segmentation of Forensic Analysis Environment: Isolate CSI Linux systems within a dedicated forensic analysis network segment to restrict access and minimize potential exposure to the broader network.
• Enhanced Monitoring and Anomaly Detection: Implement advanced monitoring tools and techniques to detect unusual activities and potential security breaches. This includes monitoring file access patterns and network traffic associated with CSI Linux systems.
• Regular Security Assessments and Audits: Conduct periodic security assessments and audits of CSI Linux systems to identify and remediate vulnerabilities. This includes vulnerability scanning and penetration testing tailored to the forensic analysis environment.
• Encryption of Sensitive Data: Encrypt sensitive data stored on CSI Linux systems, including forensic images and analysis results, to protect against unauthorized access and data breaches.
• Access Control and Authentication: Enforce strict access control policies and multi-factor authentication for users accessing CSI Linux systems to ensure that only authorized personnel can perform forensic analysis tasks.
• Forensic Readiness and Incident Response Plan: Develop and maintain a forensic readiness plan that includes incident response procedures for handling security incidents affecting CSI Linux systems. This plan should outline roles, responsibilities, and actions to quickly mitigate and recover from incidents.
• Security Awareness and Training: Provide specialized security awareness training for users of CSI Linux systems, focusing on the risks associated with forensic analysis and the importance of adhering to security best practices.
• Software Restriction Policies: Implement software restriction policies to control the execution of unauthorized software on CSI Linux systems, reducing the risk of malware infections and other software-based threats.
• Backup and Recovery: Establish robust backup and recovery procedures for CSI Linux systems to ensure the availability of forensic data and system configurations in the event of data loss or system failure.
• Physical Security Measures: Apply physical security controls to protect CSI Linux systems from unauthorized physical access. This includes securing workspaces, using locking mechanisms for devices, and controlling access to forensic labs.
By implementing these compensating controls, organizations can significantly reduce the security risks associated with the CIS compliance exceptions for CSI Linux systems, ensuring a secure and effective forensic analysis environment.

Acknowledgement and Acceptance:
I, the undersigned, acknowledge that I have read and understood the CIS compliance exceptions outlined in this document for CSI Linux systems. I accept the risks associated with these exceptions and agree to implement the recommended risk mitigation measures to safeguard the system and data. I further agree to periodically review and update security measures in alignment with best practices and emerging threats.
By adding a CSI Linux system to a secured network, I accept responsibility for maintaining the system's security in accordance with these exceptions and acknowledge that failure to adhere to these guidelines may result in revocation of network access privileges.
EOF
}

cis_lvl_1() {
	cis_exceptions

	# Ask for acceptance
	read -p "Do you accept the CIS compliance exceptions for CSI Linux systems? (yes/no): " acceptance
	if [ "$acceptance" != "yes" ]; then
		echo "Exiting the function. CIS Level 1 configuration will not proceed."
		return
	fi

	echo "Configuring the platform for CIS Level 1 Benchmarks"
 	echo $key | sudo -S sleep 1
	echo "Warning Banners - Configuring system banners..."
	# Define the security banner
	security_banner="
	+---------------------------------------------------------------------------+
	|                             SECURITY NOTICE                               |
	|                                                                           |
	|         ** Unauthorized Access and Usage is Strictly Prohibited **        |
	|                                                                           |
	| All activities on this system are subject to monitoring and recording for |
	| security purposes. Unauthorized access or usage will be investigated and  |
	|                    may result in legal consequences.                      |
	|                                                                           |
	|        If you are not an authorized user, disconnect immediately.         |
	|                                                                           |
	| By accessing this system, you consent to these terms and acknowledge the  |
	|                     importance of computer security.                      |
	|                                                                           |
	|            Report any suspicious activity to the IT department.           |
	|                                                                           |
	|          Thank you for helping us maintain a secure environment.          |
	|                                                                           |
	|              ** Protecting Our Data, Protecting Our Future **             |
	|                                                                           |
	+---------------------------------------------------------------------------+
	"
	# Print the security banner
	echo "$security_banner"
	echo "$security_banner" | sudo tee /etc/issue.net /etc/issue /etc/motd &>/dev/null

	# SSH configuration
	echo "Configuring SSH..."
	sed -i 's|#Banner none|Banner /etc/issue.net|' /etc/ssh/sshd_config
	sed -i 's/#PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
	sed -i 's/#Port 22/Port 2222/' /etc/ssh/sshd_config
	sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
	systemctl restart sshd
	
	# Non-login system accounts
	echo "Configuring system accounts to be non-login..."
	awk -F: '($3 < 1000) {print $1 " " $6}' /etc/passwd | while read -r user dir; do
	if [ ! -z "$dir" ]; then
	    sudo usermod -s /usr/sbin/nologin "$user"
	fi
	done
	
	# Password policies
	echo "Configuring password creation requirements..."
	apt-get install -y libpam-cracklib libpam-pwquality
 	echo "password requisite pam_pwquality.so retry=3 minlen=12" | sudo tee -a /etc/pam.d/common-password > /dev/null
	echo "auth required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900" | sudo tee -a /etc/pam.d/common-auth
	
	# Group wheel for su command
	echo "Configuring group wheel for su command..."
	# Check if the wheel group exists, if not, create it
	if ! grep -q "^wheel:" /etc/group; then
	    groupadd wheel
	fi
	echo "auth required pam_wheel.so use_uid" | sudo tee -a /etc/pam.d/su
	echo "auth required pam_wheel.so group=wheel" | sudo tee -a /etc/pam.d/su

	# Adds an emergencyuser
 	useradd -m emergencyuser -G sudo,wheel -s /bin/bash || { echo "emergencyuser:${key}" | sudo chpasswd; }
 
	echo "Configuring firewall..."
	ufw enable
	ufw default deny incoming
	ufw default allow outgoing
	
	echo "Installing and enabling audit system..."
	systemctl enable auditd
	
	echo "Configuring time synchronization..."
	systemctl enable ntp
	
	echo "Disabling IP forwarding and redirects..."
	sysctl -w net.ipv4.ip_forward=0
	sysctl -w net.ipv4.conf.all.send_redirects=0
	sysctl -w net.ipv4.conf.default.send_redirects=0
	echo "net.ipv4.ip_forward = 0" | sudo tee -a /etc/sysctl.conf
	echo "net.ipv4.conf.all.send_redirects = 0" | sudo tee -a /etc/sysctl.conf
	echo "net.ipv4.conf.default.send_redirects = 0" | sudo tee -a /etc/sysctl.conf
	
	# Access control for cron and at
	echo "Configuring access control for cron and at..."
	echo "root" | sudo tee /etc/cron.allow
	echo "root" | sudo tee /etc/at.allow
	chmod og-rwx /etc/cron.allow /etc/at.allow
	rm -f /etc/cron.deny /etc/at.deny
	
	# Logging with rsyslog
	echo "Installing and enabling rsyslog..."
	systemctl enable rsyslog
	
	echo "Installing and initializing AIDE..."
	aideinit
	
	# Secure compilers and other measures
	chmod og-rwx /usr/bin/gcc /usr/bin/g++
	echo "Acquire::gpgv::Options::=--ignore-time-conflict;" | sudo tee -a /etc/apt/apt.conf.d/99verify-signatures
	echo "* hard core 0" | sudo tee -a /etc/security/limits.conf
	echo "fs.suid_dumpable = 0" | sudo tee -a /etc/sysctl.conf
	sysctl -w fs.suid_dumpable=0

	# GRUB password setup using $key variable
	echo "Setting GRUB password using the provided key..."
	GRUB_PASSWORD_HASH=$(echo -e "${key}\n${key}" | grub-mkpasswd-pbkdf2 | awk '/PBKDF2/ {print $NF}')
	echo "set superusers=\"csi\"" | sudo tee /etc/grub.d/40_custom > /dev/null
	echo "password_pbkdf2 csi ${GRUB_PASSWORD_HASH}" | sudo tee -a /etc/grub.d/40_custom > /dev/null
	update-grub
	echo "GRUB password has been set as $key."

	# Other system services and permissions
	systemctl mask systemd-udevd.service
	chmod 600 /etc/shadow /etc/gshadow
	sudo -k
	echo "Coming soon...."
}

prompt_for_sudo() {
    while true; do
        key=$(zenity --password --title "Power up your system with an upgrade." --text "Enter your CSI password." --width=400)
        if [ $? -ne 0 ]; then
            zenity --info --text="Operation cancelled. Exiting script." --width=400
            exit 1
        fi
        if echo $key | sudo -S -v -k &> /dev/null; then
            sudo -k # Reset the sudo timestamp after verification
            echo "sudo access verified."
            break # Exit loop if the password is correct
        else
            zenity --error --title="Authentication Failure" --text="Incorrect password or lack of sudo privileges. Please try again." --width=400
        fi
    done
}

prompt_for_sudo
cis_exceptions
cis_lvl_1()
